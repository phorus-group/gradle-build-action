name: Gradle Build Action
description: A sample GitHub Action written in Bash

inputs:
  BUILD_AND_TEST:
    description: "Set to true if you want to run build and not exclude the check task"
    required: false
    default: "false"
  JACOCO_CSV_LOCATION:
    description: "Location of Jacoco CSV report, only used if BUILD_AND_TEST is set to true"
    required: false
    default: "./build/reports/jacoco/test/jacocoTestReport.csv"
outputs:
  TOTAL_LINES:
    description: "Total lines to cover with tests, only set if BUILD_AND_TEST is set to true"
    value: ${{ steps.build_and_test.outputs.total-lines }}
  LINES_COVERED:
    description: "Total lines to covered with tests, only set if BUILD_AND_TEST is set to true"
    value: ${{ steps.build_and_test.outputs.lines-covered }}
  COVERAGE_PERCENTAGE:
    description: "The coverage percentage, only set if BUILD_AND_TEST is set to true"
    value: ${{ steps.build_and_test.outputs.coverage-percentage }}

runs:
  using: composite
  steps:
    - name: "Setup Java"
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: "Setup Gradle"
      uses: gradle/actions/setup-gradle@v4

    - name: "Run build and tests"
      id: build_and_test
      run: |
        ./gradlew --build-cache build
        if [ -f ${{ inputs.JACOCO_CSV_LOCATION }} ]; then
          awk -F "," '{ instructions += $4 + $5; covered += $5 } END { print covered, "/", instructions, " instructions covered"; print 100*covered/instructions, "% covered" }' ${{ inputs.JACOCO_CSV_LOCATION }}
          echo "total-lines=$(awk -F "," '{ instructions += $4 + $5 } END { print instructions }' ${{ inputs.JACOCO_CSV_LOCATION }})" >> "$GITHUB_OUTPUT"
          echo "lines-covered=$(awk -F "," '{ covered += $5 } END { print covered }' ${{ inputs.JACOCO_CSV_LOCATION }})" >> "$GITHUB_OUTPUT"
          echo "coverage-percentage=$(awk -F "," '{ instructions += $4 + $5; covered += $5 } END { print 100*covered/instructions }' ${{ inputs.JACOCO_CSV_LOCATION }})" >> "$GITHUB_OUTPUT"
        else
          echo -e "\e[33mJacoco CSV coverage report not found!\e[0m"
        fi
      if: ${{ inputs.BUILD_AND_TEST == 'true' }}
      shell: bash

    - name: "Run build"
      run: |
        ./gradlew --build-cache build testClasses -x check
      if: ${{ inputs.BUILD_AND_TEST != 'true' }}
      shell: bash

    - name: "Prepare branch name"
      id: prepare_branch_name
      run: |
        BRANCH_NAME=$(echo "${{ github.head_ref || github.ref_name }}" | sed "s/\//\_/g")
        echo "name=$BRANCH_NAME" >> "$GITHUB_OUTPUT"
      shell: bash

    - name: "Upload build artifact"
      uses: actions/upload-artifact@master
      with:
        name: gradle-build-${{ steps.prepare_branch_name.outputs.name }}
        retention-days: 2
        path: build/libs/*.jar
